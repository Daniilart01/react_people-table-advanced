{"version":3,"sources":["components/Navbar.tsx","App.tsx","components/Loader/Loader.tsx","api.ts","utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/PersonLink/PersonLink.tsx","utils/proceedPeople.ts","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","pages/HomePage/HomePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","index.tsx"],"names":["Navbar","className","role","to","isActive","cn","App","Loader","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","search","centuriesList","PeopleFilters","setSearchParams","get","sex","type","placeholder","onChange","event","query","target","trimStart","map","century","getAll","includes","centuries","filter","c","PersonLink","person","useLocation","pathname","slug","name","proceedPeople","people","newPeople","trim","human","toLowerCase","motherName","fatherName","length","Math","floor","born","filterPeople","sortType","order","sortParam","sort","a","b","localeCompare","died","sortPeople","PeopleTable","humanId","useParams","getSortingParams","useCallback","param","getSortingIcon","mother","father","PeoplePage","useState","setPeople","isError","setIsError","isLoading","setIsLoading","displayPeopleTable","useMemo","fetchPeople","getPeople","data","mappedPeople","editedPerson","find","p","catch","finally","useEffect","HomePage","NotFoundPage","createRoot","document","getElementById","render","path","element","replace","index"],"mappings":"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","file":"static/js/main.95442e22.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => cn('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"people\"\n            className={({ isActive }) => cn('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchLink } from './SearchLink';\nimport { getSearchWith } from '../utils/searchHelper';\n\ntype Centuries = '16' | '17' | '18' | '19' | '20';\n\nconst centuriesList: Centuries[] = ['16', '17', '18', '19', '20'];\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleInputQuery = (query: string) => setSearchParams(getSearchWith(\n    searchParams,\n    { query: query.trimStart() || null },\n  ));\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={cn({\n            'is-active': !searchParams.get('sex'),\n          })}\n          params={{ sex: null }}\n        >\n          All\n        </SearchLink>\n        <SearchLink\n          className={cn({\n            'is-active': searchParams.get('sex') === 'm',\n          })}\n          params={{ sex: 'm' }}\n        >\n          Male\n        </SearchLink>\n        <SearchLink\n          className={cn({\n            'is-active': searchParams.get('sex') === 'f',\n          })}\n          params={{ sex: 'f' }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={searchParams.get('query') || ''}\n            onChange={(event) => handleInputQuery(event.target.value)}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {centuriesList.map(century => (\n              <SearchLink\n                key={century}\n                data-cy=\"century\"\n                className={cn('button', 'mr-1', {\n                  'is-info': searchParams.getAll('centuries').includes(century),\n                })}\n                params={{\n                  centuries:\n                    !searchParams.getAll('centuries').includes(century)\n                      ? [...searchParams.getAll('centuries'), century]\n                      : searchParams.getAll('centuries')\n                        .filter(c => c !== century),\n                }}\n              >\n                {century}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={cn('button', 'is-success',\n                { 'is-outlined': searchParams.get('centuries') })}\n              params={{ centuries: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{ centuries: null, query: null, sex: null }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { search } = useLocation();\n\n  return (\n    <Link\n      className={cn({ 'has-text-danger': person.sex === 'f' })}\n      to={{\n        pathname: `../${person.slug}`,\n        search: search.toString(),\n      }}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import { Person } from '../types';\n\nfunction sortPeople(people: Person[], sortParam: string, order: number) {\n  switch (sortParam) {\n    case 'name':\n      return people.sort((a, b) => order * a.name.localeCompare(b.name));\n    case 'sex':\n      return people.sort((a, b) => order * a.sex.localeCompare(b.sex));\n    case 'born':\n      return people.sort((a, b) => order * (a.born - b.born));\n    case 'died':\n      return people.sort((a, b) => order * (a.died - b.died));\n    default: return people;\n  }\n}\n\nfunction filterPeople(people: Person[], searchParams: URLSearchParams) {\n  let newPeople = [...people];\n  const query = searchParams.get('query')?.trim();\n  const sex = searchParams.get('sex');\n  const centuries = searchParams.getAll('centuries');\n\n  if (sex) {\n    newPeople = people.filter(human => human.sex === sex);\n  }\n\n  if (query) {\n    newPeople = newPeople.filter(human => (\n      human.name.toLowerCase().includes(query.toLowerCase())\n      || human.motherName?.toLowerCase().includes(query.toLowerCase())\n      || human.fatherName?.toLowerCase().includes(query.toLowerCase())\n    ));\n  }\n\n  if (centuries.length) {\n    newPeople = newPeople.filter(human => centuries\n      .includes(Math.floor((human.born / 100) + 1).toString()));\n  }\n\n  return newPeople;\n}\n\nexport function proceedPeople(\n  people: Person[],\n  searchParams: URLSearchParams,\n) {\n  let newPeople = filterPeople(people, searchParams);\n\n  const sortType = searchParams.get('sort');\n  const order = searchParams.get('order') ? -1 : 1;\n\n  if (sortType) {\n    newPeople = sortPeople(newPeople, sortType, order);\n  }\n\n  return newPeople;\n}\n","import { useCallback } from 'react';\nimport cn from 'classnames';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { SearchParams } from '../../utils/searchHelper';\nimport { SearchLink } from '../SearchLink';\nimport { PersonLink } from '../PersonLink';\nimport { Person } from '../../types';\nimport { proceedPeople } from '../../utils/proceedPeople';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { humanId } = useParams();\n  const [searchParams] = useSearchParams();\n\n  const getSortingParams = useCallback((param: string): SearchParams => {\n    if (searchParams.get('sort') === param) {\n      if (searchParams.get('order') === 'desc') {\n        return { sort: null, order: null };\n      }\n\n      return { sort: param, order: 'desc' };\n    }\n\n    return { sort: param, order: null };\n  }, [searchParams]);\n\n  const getSortingIcon = useCallback((param: string) => {\n    return cn('fas', {\n      'fa-sort': searchParams.get('sort') !== param,\n      'fa-sort-up': searchParams.get('sort') === param\n        && searchParams.get('order') !== 'desc',\n      'fa-sort-down': searchParams.get('sort') === param\n        && searchParams.get('order') === 'desc',\n    });\n  }, [searchParams]);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      // eslint-disable-next-line max-len\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <SearchLink\n                params={getSortingParams('name')}\n              >\n                <span className=\"icon\">\n                  <i className={getSortingIcon('name')} />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <SearchLink\n                params={getSortingParams('sex')}\n              >\n                <span className=\"icon\">\n                  <i className={getSortingIcon('sex')} />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <SearchLink\n                params={getSortingParams('born')}\n              >\n                <span className=\"icon\">\n                  <i className={getSortingIcon('born')} />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <SearchLink\n                params={getSortingParams('died')}\n              >\n                <span className=\"icon\">\n                  <i className={getSortingIcon('died')} />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {proceedPeople(people, searchParams).map((person) => {\n          const {\n            sex, born, died, slug, motherName,\n            fatherName, mother, father,\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              className={cn(\n                { 'has-background-warning': slug === humanId },\n              )}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {\n                  mother\n                    ? <PersonLink person={mother} />\n                    : motherName || '-'\n                }\n              </td>\n              <td>\n                {\n                  father\n                    ? <PersonLink person={father} />\n                    : fatherName || '-'\n                }\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import {\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { Loader } from '../../components/Loader';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PeopleFilters } from '../../components/PeopleFilters';\nimport { PeopleTable } from '../../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const displayPeopleTable = useMemo(() => {\n    return !isError && !isLoading && !!people.length;\n  }, [isError, isLoading, people]);\n\n  const fetchPeople = () => {\n    setIsError(false);\n    setPeople([]);\n    setIsLoading(true);\n    getPeople()\n      .then((data) => {\n        const mappedPeople = data.map((person) => {\n          const editedPerson = { ...person };\n          const mother = data.find((p) => p.name === person.motherName);\n          const father = data.find((p) => p.name === person.fatherName);\n\n          if (mother) {\n            editedPerson.mother = mother;\n          }\n\n          if (father) {\n            editedPerson.father = father;\n          }\n\n          return editedPerson;\n        });\n\n        setPeople(mappedPeople);\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  };\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            <PeopleFilters />\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && <Loader />}\n\n              {isError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {(!isError && !isLoading && !people.length) && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {displayPeopleTable && (\n                <PeopleTable people={people} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route index element={<HomePage />} />\n          <Route path=\"people\">\n            <Route path=\":humanId?\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}